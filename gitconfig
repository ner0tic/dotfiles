[color]
  ui = true							# Use color in git cmds
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  
[alias]
  a = add                           # add
  chunkyadd = add --patch           # stage commits chunk by chunk

  b = branch -v                     # branch (verbose)

  c = commit -m                     # commit with message
  ca = commit -am                   # commit all with message
  ci = commit                       # commit
  amend = commit --amend            # ammend your last commit
  ammend = commit --amend           # ammend your last commit

  co = checkout                     # checkout
  nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")

  cp = cherry-pick -x               # grab a change from a branch

  d = diff                          # diff unstaged changes
  dc = diff --cached                # diff staged changes
  last = diff HEAD^                 # diff last committed change

  l = log --graph --date=short
  changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  changelog = log --pretty=format:\" * %s\"
  shortnocolor = log --pretty=format:\"%h %cr %cn %s\"

  pl = pull                         # pull

  ps = push                         # push

  rc = rebase --continue            # continue rebase
  rs = rebase --skip                # skip rebase

  r = remote -v                     # show remotes (verbose)

  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
  filelog = log -u                  # show changes to a file
  mt = mergetool                    # fire up the merge tool

  ss = stash                        # stash changes
  sl = stash list                   # list stashes
  sa = stash apply                  # apply stash (restore changes)
  sd = stash drop                   # drop stashes (destory changes)

  s = status                        # status
  st = status                       # status
  stat = status                     # status

  t = tag -n                        # show tags with <n> lines of each tag message

  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit

[format]
  pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset

[merge]
  summary = true
  verbosity = 1
  log = true						# include summaries of merged commits in commit msgs

[apply]
  whitespace = fix					# Detect whitespace error when applying a patch

[branch]
  autosetupmerge = true

[push]
  default = tracking				# push will push the current branch to its tracking branch

[core]
  autocrlf = false
  editor = vim
  excludesfile = ~/.git/gitignore
  attributesfile = ~/.git/gitattributes
  
[advice]
  statusHints = false
  
[diff]
  
  mnemonicprefix = true 			# Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  
[rerere]
  enabled = true					# Remember my merges
  
# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"
